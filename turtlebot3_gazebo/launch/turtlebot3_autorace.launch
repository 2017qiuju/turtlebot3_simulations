<launch>
  <env name="GAZEBO_RESOURCE_PATH" value="$(find turtlebot3_gazebo)/models/turtlebot3_autorace/ground_picture" />
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>

  <arg name="x_pos_burger" default="0.245"/>
  <arg name="y_pos_burger" default="-1.787"/>
  <arg name="z_pos_burger" default="0"/>  
  <arg name="x_pos_waffle" default="0.245"/>
  <arg name="y_pos_waffle" default="-2.377"/>
  <arg name="z_pos_waffle" default="0"/>  

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_autorace_burger.world" if="$(eval model == 'burger')" />
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_autorace_waffle.world" if="$(eval model == 'waffle')" />
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_autorace_waffle.world" if="$(eval model == 'waffle_pi')" />
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
  </include>  
  
  <param name="robot_description" command="$(find xacro)/xacro.py $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3_burger -x $(arg x_pos_burger) -y $(arg y_pos_burger) -z $(arg z_pos_burger) -param robot_description" if="$(eval model == 'burger')"/>
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3_waffle -x $(arg x_pos_waffle) -y $(arg y_pos_waffle) -z $(arg z_pos_waffle) -param robot_description" if="$(eval model == 'waffle')"/>
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3_waffle_pi -x $(arg x_pos_waffle) -y $(arg y_pos_waffle) -z $(arg z_pos_waffle) -param robot_description" if="$(eval model == 'waffle_pi')"/>
  
</launch>


