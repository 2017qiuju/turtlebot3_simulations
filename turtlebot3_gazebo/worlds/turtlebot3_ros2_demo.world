<?xml version="1.0"?>
<!--
  Gazebo ROS turtlebot3 demo

  Run teleop node:

  ros2 run turtlebot3_teleop turtlebot3_teleop_key __ns:=/tb3

  Try sending commands:

    ros2 topic pub /tb3/cmd_vel geometry_msgs/Twist '{linear: {x: 1.0}}' -1

    ros2 topic pub /tb3/cmd_vel geometry_msgs/Twist '{angular: {z: 0.1}}' -1

  Try listening to odometry:

    ros2 topic echo /demo/odom_demo

  Try listening to TF:

    ros2 run tf2_ros tf2_echo odom base_link

    ros2 run tf2_ros tf2_echo base_link right_wheel

    ros2 run tf2_ros tf2_echo base_link left_wheel
-->
<sdf version="1.6">
  <world name="default">

    <include>
      <uri>model://ground_plane</uri>
    </include>

    <include>
      <uri>model://sun</uri>
    </include>

    <scene>
      <shadows>false</shadows>
    </scene>

    <gui fullscreen='0'>
      <camera name='user_camera'>
        <pose frame=''>0.319654 -0.235002 9.29441 0 1.5138 0.009599</pose>
        <view_controller>orbit</view_controller>
        <projection_type>perspective</projection_type>
      </camera>
    </gui>

    <physics type="ode">
      <real_time_update_rate>1000.0</real_time_update_rate>
      <max_step_size>0.001</max_step_size>
      <real_time_factor>1</real_time_factor>
      <ode>
        <solver>
          <type>quick</type>
          <iters>150</iters>
          <precon_iters>0</precon_iters>
          <sor>1.400000</sor>
          <use_dynamic_moi_rescaling>1</use_dynamic_moi_rescaling>
        </solver>
        <constraints>
          <cfm>0.00001</cfm>
          <erp>0.2</erp>
          <contact_max_correcting_vel>2000.000000</contact_max_correcting_vel>
          <contact_surface_layer>0.01000</contact_surface_layer>
        </constraints>
      </ode>
    </physics>

    <model name="turtlebot3_world">
      <static>1</static>
      <include>
        <uri>model://turtlebot3_world</uri>
      </include>
    </model>

    <model name="turtlebot3">
      <pose>-2.0 0.0 0.1 0.0 0.0 0.0</pose>

      <link name="base_link">

        <inertial>
          <pose>-0.032 0 0.070 0 0 0</pose>
          <inertia>
            <ixx>0.001</ixx>
            <ixy>0.000</ixy>
            <ixz>0.000</ixz>
            <iyy>0.001</iyy>
            <iyz>0.000</iyz>
            <izz>0.001</izz>
          </inertia>
          <mass>1.0</mass>
        </inertial>

        <collision name="base_collision">
          <pose>-0.032 0 0.070 0 0 0</pose>
          <geometry>
            <box>
              <size>0.140 0.140 0.140</size>
            </box>
          </geometry>
        </collision>

        <visual name="base_visual">
          <pose>-0.032 0 0 0 0 0</pose>
          <geometry>
            <mesh>
              <uri>model://turtlebot3_burger/meshes/burger_base.dae</uri>
              <scale>0.001 0.001 0.001</scale>
            </mesh>
          </geometry>
        </visual>
      </link>

      <link name="base_scan">
        <inertial>
          <pose>-0.020 0 0.161 0 0 0</pose>
          <inertia>
            <ixx>0.001</ixx>
            <ixy>0.000</ixy>
            <ixz>0.000</ixz>
            <iyy>0.001</iyy>
            <iyz>0.000</iyz>
            <izz>0.001</izz>
          </inertia>
          <mass>0.125</mass>
        </inertial>

        <collision name="lidar_sensor_collision">
            <pose>-0.020 0 0.161 0 0 0</pose>
            <geometry>
              <cylinder>
                <radius>0.0508</radius>
                <length>0.055</length>
              </cylinder>
            </geometry>
          </collision>

          <visual name="lidar_sensor_visual">
            <pose>-0.032 0 0.171 0 0 0</pose>
            <geometry>
              <mesh>
                <uri>model://turtlebot3_burger/meshes/lds.dae</uri>
                <scale>0.001 0.001 0.001</scale>
              </mesh>
            </geometry>
          </visual>

          <sensor name="hls_lfcd_lds" type="ray">
            <always_on>1</always_on>
            <visualize>1</visualize>
            <pose>-0.032 0 0.171 0 0 0</pose>
            <update_rate>1800</update_rate>
            <ray>
              <scan>
                <horizontal>
                  <samples>360</samples>
                  <resolution>1.000000</resolution>
                  <min_angle>0.000000</min_angle>
                  <max_angle>6.280000</max_angle>
                </horizontal>
              </scan>
              <range>
                <min>0.120000</min>
                <max>3.5</max>
                <resolution>0.015000</resolution>
              </range>
              <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
              </noise>
            </ray>
            <plugin name="laserscan" filename="libgazebo_ros_ray_sensor.so">
              <ros>
                <namespace>/tb3</namespace>
                <argument>~/out:=scan</argument>
              </ros>
              <output_type>sensor_msgs/LaserScan</output_type>
            </plugin>
          </sensor>
        </link>

        <link name="left_wheel">

          <inertial>
            <pose>0 0.08 0.023 -1.57 0 0</pose>
            <inertia>
              <ixx>0.001</ixx>
              <ixy>0.000</ixy>
              <ixz>0.000</ixz>
              <iyy>0.001</iyy>
              <iyz>0.000</iyz>
              <izz>0.001</izz>
            </inertia>
            <mass>0.1</mass>
          </inertial>

          <collision name="left_wheel_collision">
            <pose>0 0.08 0.023 -1.57 0 0</pose>
            <geometry>
              <cylinder>
                <radius>0.033</radius>
                <length>0.018</length>
              </cylinder>
            </geometry>
              <surface>
              <!-- This friction pamareter don't contain reliable data!! -->
                <friction>
                  <ode>
                    <mu>100000.0</mu>
                    <mu2>100000.0</mu2>
                    <fdir1>0 0 0</fdir1>
                    <slip1>0.0</slip1>
                    <slip2>0.0</slip2>
                  </ode>
              </friction>
              <contact>
                <ode>
                  <soft_cfm>0</soft_cfm>
                  <soft_erp>0.2</soft_erp>
                  <kp>1e+5</kp>
                  <kd>1</kd>
                  <max_vel>0.01</max_vel>
                  <min_depth>0.001</min_depth>
                </ode>
              </contact>
            </surface>
          </collision>

          <visual name="left_wheel_visual">
            <pose>0 0.08 0.023 0 0 0</pose>
            <geometry>
              <mesh>
                <uri>model://turtlebot3_burger/meshes/left_tire.dae</uri>
                <scale>0.001 0.001 0.001</scale>
              </mesh>
            </geometry>
          </visual>
        </link>

        <link name="right_wheel">

          <inertial>
            <pose>0.0 -0.08 0.023 -1.57 0 0</pose>
            <inertia>
              <ixx>0.001</ixx>
              <ixy>0.000</ixy>
              <ixz>0.000</ixz>
              <iyy>0.001</iyy>
              <iyz>0.000</iyz>
              <izz>0.001</izz>
            </inertia>
            <mass>0.1</mass>
          </inertial>

          <collision name="right_wheel_collision">
            <pose>0.0 -0.08 0.023 -1.57 0 0</pose>
            <geometry>
              <cylinder>
                <radius>0.033</radius>
                <length>0.018</length>
              </cylinder>
            </geometry>
              <surface>
              <!-- This friction pamareter don't contain reliable data!! -->
                <friction>
                  <ode>
                    <mu>100000.0</mu>
                    <mu2>100000.0</mu2>
                    <fdir1>0 0 0</fdir1>
                    <slip1>0.0</slip1>
                    <slip2>0.0</slip2>
                  </ode>
              </friction>
              <contact>
                <ode>
                  <soft_cfm>0</soft_cfm>
                  <soft_erp>0.2</soft_erp>
                  <kp>1e+5</kp>
                  <kd>1</kd>
                  <max_vel>0.01</max_vel>
                  <min_depth>0.001</min_depth>
                </ode>
              </contact>
            </surface>
          </collision>

          <visual name="right_wheel_visual">
            <pose>0.0 -0.08 0.023 0 0 0</pose>
            <geometry>
              <mesh>
                <uri>model://turtlebot3_burger/meshes/right_tire.dae</uri>
                <scale>0.001 0.001 0.001</scale>
              </mesh>
            </geometry>
          </visual>
        </link>

        <link name='caster'>
          <pose>-0.081 0 -0.004 0 0 0</pose>
          <inertial>
            <mass>0.001</mass>
            <inertia>
              <ixx>0.00001</ixx>
              <ixy>0.000</ixy>
              <ixz>0.000</ixz>
              <iyy>0.00001</iyy>
              <iyz>0.000</iyz>
              <izz>0.00001</izz>
            </inertia>
          </inertial>
          <collision name='collision'>
            <geometry>
              <sphere>
                <radius>0.005000</radius>
              </sphere>
            </geometry>
            <surface>
              <contact>
                <ode>
                  <soft_cfm>0</soft_cfm>
                  <soft_erp>0.2</soft_erp>
                  <kp>1e+5</kp>
                  <kd>1</kd>
                  <max_vel>0.01</max_vel>
                  <min_depth>0.001</min_depth>
                </ode>
              </contact>
            </surface>
          </collision>
        </link>

        <joint name="left_wheel_joint" type="revolute">
          <parent>base_link</parent>
          <child>left_wheel</child>
          <pose>0.0 0.08 0.023 -1.57 0 0</pose>
          <axis>
            <xyz>0 0 1</xyz>
          </axis>
        </joint>

        <joint name="right_wheel_joint" type="revolute">
          <parent>base_link</parent>
          <child>right_wheel</child>
          <pose>0.0 -0.08 0.023 -1.57 0 0</pose>
          <axis>
            <xyz>0 0 1</xyz>
          </axis>
        </joint>

        <joint name='caster_wheel' type='ball'>
          <parent>base_link</parent>
          <child>caster</child>
        </joint>

        <joint name="lidar_joint" type="fixed">
          <parent>base_link</parent>
          <child>base_scan</child>
          <pose>-0.032 0 0.171 0 0 0</pose>
          <axis>
            <xyz>0 0 1</xyz>
            <!-- <use_parent_model_frame>true</use_parent_model_frame> -->
          </axis>
        </joint>

        <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>

          <ros>
            <namespace>/tb3</namespace>
          </ros>

          <!-- wheels -->
          <left_joint>left_wheel_joint</left_joint>
          <right_joint>right_wheel_joint</right_joint>

          <!-- kinematics -->
          <wheel_separation>0.160</wheel_separation>
          <wheel_diameter>0.066</wheel_diameter>

          <!-- limits -->
          <max_wheel_torque>20</max_wheel_torque>
          <max_wheel_acceleration>1.0</max_wheel_acceleration>

          <!-- output -->
          <publish_odom>true</publish_odom>
          <publish_odom_tf>true</publish_odom_tf>
          <publish_wheel_tf>true</publish_wheel_tf>

          <odometry_frame>odom</odometry_frame>
          <robot_base_frame>base_link</robot_base_frame>

        </plugin>

      </model>

  </world>
</sdf>
